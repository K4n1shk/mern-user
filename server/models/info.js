const mongoose = require("mongoose");
const Joi = require("joi");

const userSchema = new mongoose.Schema({
  firstName: { type: String, required: true },
  lastName: { type: String, required: true },
  email: { type: String, required: true },
  contact: { type: String, required: true },
  category: { type: String, required: true },
  fatherName: { type: String, required: true },
  motherName: { type: String, required: true },
  fatherOcc: { type: String, required: true },
  motherOcc: { type: String, required: true },
  totalIncome: { type: Number, required: true },
  parentContact: { type: String, required: true },
  date: { type: Date, default: Date.now },
  isVerified: { type: Boolean, default: false },
  isDeclined: { type: Boolean, default: false },
  religion: { type: String, required: true },
  nationality: { type: String, required: true },
  gender: { type: String, required: true },
  altContact: { type: String, required: true },
  DOB: { type: Date, required: true },
  country: { type: String, required: true },
  streetAddress: { type: String, required: true },
  locality: { type: String, required: true },
  landmark: { type: String, required: true },
  district: { type: String, required: true },
  city: { type: String, required: true },
  state: { type: String, required: true },
  zip: { type: String, required: true },
  pio: { type: String, required: true },
  NRI: { type: String, required: true },
  Pcountry: { type: String, required: true },
  PstreetAddress: { type: String, required: true },
  Plocality: { type: String, required: true },
  Plandmark: { type: String, required: true },
  Pdistrict: { type: String, required: true },
  Pcity: { type: String, required: true },
  Pstate: { type: String, required: true },
  pzip: { type: String, required: true },
  highestQualification: { type: String, required: true },
  tenschoolName: { type: String, required: true },
  tenBoard: { type: String, required: true },
  tweschoolName: { type: String, required: true },
  tweboard: { type: String, required: true },
  twelveMarks: { type: Number, required: true },
  tenMarks: { type: Number, required: true },
  twelveYear: { type: Number, required: true },
  tenYear: { type: Number, required: true },
  JeeMRollNumber: { type: Number, required: true },
  JEEMrank: { type: Number, required: true },
  JeeARollNumber: { type: String },
  JEEArank: { type: String },
  GATERollNumber: { type: String },
  GATErank: { type: String },
  UGCNETRollNumber: { type: String },
  UGCNETrank: { type: String },
  branch: { type: String, required: true },
  domicilestate: { type: String, required: true },
  pwd: { type: String, required: true },
  allotedinstitute: { type: String, required: true },
  allotedCategory: { type: String, required: true },
  remarks: { type: String },
  roundNumber: { type: Number, required: true },
  CSABstatus: { type: String, required: true },
  csabAllotedInstitute: { type: String, required: true },
  paymentMode: { type: String, required: true },
  transactionId: { type: String, required: true },
  bankName: { type: String, required: true },
  feeAmount: { type: Number, required: true },
  DOD: { type: Date, required: true },
  feeType: { type: String, required: true },
  scholarshipStatus: { type: String },
  scholarshipName: { type: String },
  feeYear: { type: Number, required: true },
  feeSemester: { type: String, required: true },
  preferredHostel: { type: String, required: true },
  preferredHostelFloor: { type: Number, required: true },
  roomStyle: { type: String, required: true },
  messFood: { type: String, required: true },
  hostelPaymentMode: { type: String, required: true },
  HostelTid: { type: Number, required: true },
  HBankName: { type: String, required: true },
  HFeeAmount: { type: Number, required: true },
  HDOD: { type: Date, required: true },
});

const Info = mongoose.model("info", userSchema);

const validate = (data) => {
  const schema = Joi.object({
    firstName: Joi.string().required().label("First Name"),
    lastName: Joi.string().required().label("Last Name"),
    email: Joi.string().email().required().label("Email"),
    religion: Joi.string().required().label("Religion"),
    contact: Joi.string().length(10).regex(/^\d+$/).required().label("Personal Contact"),
    nationality: Joi.string().required().label("Nationality"),
    gender: Joi.string().required().label("Gender"),
    altContact: Joi.string().length(10).regex(/^\d+$/).required().label("Alternate Contact"),
    category: Joi.string().required().label("Category"),
    DOB: Joi.date().required().label("Date of Birth"),
    fatherName: Joi.string().required().label("Father's Name"),
    motherName: Joi.string().required().label("Mother's Name"),
    fatherOcc: Joi.string().required().label("Father's Occupation"),
    motherOcc: Joi.string().required().label("Mother's Occupation"),
    totalIncome: Joi.number().required().label("Total Annual Income"),
    parentContact: Joi.string().length(10).regex(/^\d+$/).required().label("Parent's Contact"),
    country: Joi.string().required().label("Country"),
    streetAddress: Joi.string().required().label("Street Address"),
    locality: Joi.string().required().label("Locality"),
    landmark: Joi.string().required().label("Landmark"),
    district: Joi.string().required().label("District"),
    city: Joi.string().required().label("City"),
    state: Joi.string().required().label("State"),
    zip: Joi.string().length(6).regex(/^\d+$/).required().label("Postal Code"),
    pio: Joi.string().required().label("Person of IO"),
    NRI: Joi.string().required().label("NRI"),
    Pcountry: Joi.string().required().label("Permanent Country"),
    PstreetAddress: Joi.string().required().label("Permament Street Add"),
    Plocality: Joi.string().required().label("P Locality"),
    Plandmark: Joi.string().required().label("P LandMark"),
    Pdistrict: Joi.string().required().label("P District"),
    Pcity: Joi.string().required().label("P City"),
    Pstate: Joi.string().required().label("P State"),
    pzip: Joi.string().length(6).regex(/^\d+$/).required().label("Postal Zip"),
    highestQualification: Joi.string()
      .required()
      .label("Highest Qualification"),
    tenschoolName: Joi.string().required().label("10 School Name"),
    tenBoard: Joi.string().required().label("10 Board"),
    tweschoolName: Joi.string().required().label("12 School Name"),
    tweboard: Joi.string().required().label("12 board Name"),
    twelveMarks: Joi.number().required().label("12 marks"),
    tenMarks: Joi.number().required().label("10 marks"),
    twelveYear: Joi.number().required().label("12 Year"),
    tenYear: Joi.number().required().label("10 Year"),
    JeeMRollNumber: Joi.number().required().label("JEE M RollNo"),
    JEEMrank: Joi.number().required().label("JEE M Rank"),
    JeeARollNumber: Joi.string().allow(null, '').label("JEE A RollNo"),
    JEEArank: Joi.string().allow(null, '').label("JEE A Rank"),
    GATERollNumber: Joi.string().allow(null, '').label("GATE Roll Number"),
    GATErank: Joi.string().allow(null, '').label("GATE Rank"),
    UGCNETRollNumber: Joi.string().allow(null, '').label("UGC Roll Number"),
    UGCNETrank: Joi.string().allow(null, '').label("UGC NET Rank"),
    branch: Joi.string().required().label("Branch"),
    domicilestate: Joi.string().required().label("Domicile"),
    pwd: Joi.string().required().label("PwD"),
    allotedinstitute: Joi.string().required().label("Alloted Institute"),
    allotedCategory: Joi.string().required().label("Alloted Category"),
    remarks: Joi.string().allow(null, '').label("Remarks"),
    roundNumber: Joi.number().required().label("Round Number"),
    CSABstatus: Joi.string().required().label("CSAB status"),
    csabAllotedInstitute: Joi.string()
      .required()
      .label("CSAB Alloted Institute:"),
    paymentMode: Joi.string().required().label("Payment Mode"),
    transactionId: Joi.number().required().label("Transaction ID"),
    bankName: Joi.string().required().label("Bank Name"),
    feeAmount: Joi.number().required().label("Fee Amount"),
    DOD: Joi.date().required().label("Date of Deposite"),
    feeType: Joi.string().required().label("Fee Type"),
    scholarshipStatus: Joi.string().allow(null, '').label("Scholarship Status"),
    scholarshipName: Joi.string().allow(null, '').label("Scholarship Name"),
    feeYear: Joi.number().required().label("Fee Year"),
    feeSemester: Joi.string().required().label("Fee Semested"),
    preferredHostel: Joi.string().required().label("Preferred Hostel"),
    preferredHostelFloor: Joi.string().required().label("Preferred Hostel"),
    roomStyle: Joi.string().required().label("Room style"),
    messFood: Joi.string().required().label("Mess food"),
    hostelPaymentMode: Joi.string().required().label("Hostel payments mode"),
    HostelTid: Joi.string().required().label("Hostel Transaction ID"),
    HBankName: Joi.string().required().label("Hostel Fee Bank Name"),
    HFeeAmount: Joi.number().required().label("Hostel Fee Amount"),
    HDOD: Joi.date().required().label("Date of Deposite"),
  });
  return schema.validate(data);
}

module.exports = { Info, validate };